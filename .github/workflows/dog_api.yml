name: Dog API Pipeline Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy_pipeline:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install boto3 requests zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DOG }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DOG }}
          aws-region: us-east-1

      # -------------------------------
      # Package all Lambdas
      # -------------------------------
      - name: Package Lambdas
        run: |
          for lambda_dir in src/lambdas/*; do
            lambda_name=$(basename $lambda_dir)
            zip_file="${lambda_name}.zip"
            cd $lambda_dir
            zip -r ../../../$zip_file . > /dev/null
            cd ../../../
            echo "$zip_file created"
          done

      # -------------------------------
      # Deploy Lambdas
      # -------------------------------
      - name: Deploy Lambdas
        run: |
          declare -A roles=(
            ["upload_to_s3"]="${{ secrets.AWS_LAMBDA_ROLE_ARN_UPLOAD }}"
            ["log_to_dynamodb"]="${{ secrets.AWS_LAMBDA_ROLE_ARN_LOG }}"
            ["alert_png"]="${{ secrets.AWS_LAMBDA_ROLE_ARN_ALERT }}"
          )
          for zip_file in *.zip; do
            lambda_name=$(basename $zip_file .zip)
            role=${roles[$lambda_name]}
            aws lambda create-function \
              --function-name $lambda_name \
              --runtime python3.11 \
              --role $role \
              --handler lambda_function.lambda_handler \
              --zip-file fileb://$zip_file \
              || aws lambda update-function-code \
                --function-name $lambda_name \
                --zip-file fileb://$zip_file
          done

      # -------------------------------
      # Deploy Step Functions
      # -------------------------------
      - name: Deploy Step Functions
        run: |
          aws stepfunctions create-state-machine \
            --name DogApiPipelineStateMachine \
            --definition file://statemachine/definition.asl.json \
            --role-arn ${{ secrets.AWS_STEP_FUNCTIONS_ROLE_ARN }} \
          || aws stepfunctions update-state-machine \
            --state-machine-arn ${{ secrets.AWS_STEP_FUNCTIONS_ARN }} \
            --definition file://statemachine/definition.asl.json
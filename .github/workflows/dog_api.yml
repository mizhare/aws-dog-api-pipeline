name: Dog API Pipeline Deployment

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  deploy_pipeline:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install boto3 requests

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DOG }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DOG }}
          aws-region: us-east-1

      # -------------------------------
      # Deploy UploadToS3 Lambda
      # -------------------------------
      - name: Deploy UploadToS3 Lambda
        run: |
          aws lambda create-function \
            --function-name UploadToS3 \
            --runtime python3.11 \
            --role ${{ secrets.AWS_LAMBDA_ROLE_ARN_UPLOAD }} \
            --handler lambda_function.lambda_handler \
            --zip-file fileb://src/lambdas/upload_to_s3/UploadToS3.zip \
          || aws lambda update-function-code \
            --function-name UploadToS3 \
            --zip-file fileb://src/lambdas/upload_to_s3/UploadToS3.zip

      # -------------------------------
      # Deploy LogToDynamoDB Lambda
      # -------------------------------
      - name: Deploy LogToDynamoDB Lambda
        run: |
          aws lambda create-function \
            --function-name LogToDynamoDB \
            --runtime python3.11 \
            --role ${{ secrets.AWS_LAMBDA_ROLE_ARN_LOG }} \
            --handler lambda_function.lambda_handler \
            --zip-file fileb://src/lambdas/log_to_dynamodb/LogToDynamoDB.zip \
          || aws lambda update-function-code \
            --function-name LogToDynamoDB \
            --zip-file fileb://src/lambdas/log_to_dynamodb/LogToDynamoDB.zip

      # -------------------------------
      # Deploy AlertPNG Lambda
      # -------------------------------
      - name: Deploy AlertPNG Lambda
        run: |
          aws lambda create-function \
            --function-name AlertPNG \
            --runtime python3.11 \
            --role ${{ secrets.AWS_LAMBDA_ROLE_ARN_ALERT }} \
            --handler lambda_function.lambda_handler \
            --zip-file fileb://src/lambdas/alert_png/AlertPNG.zip \
          || aws lambda update-function-code \
            --function-name AlertPNG \
            --zip-file fileb://src/lambdas/alert_png/AlertPNG.zip

      # -------------------------------
      # Deploy Step Functions State Machine
      # -------------------------------
      - name: Deploy Step Functions State Machine
        run: |
          aws stepfunctions create-state-machine \
            --name DogApiPipelineStateMachine \
            --definition file://statemachine/definition.asl.json \
            --role-arn ${{ secrets.AWS_STEP_FUNCTIONS_ROLE_ARN }} \
          || aws stepfunctions update-state-machine \
            --state-machine-arn ${{ secrets.AWS_STEP_FUNCTIONS_ARN }} \
            --definition file://statemachine/definition.asl.json

      # -------------------------------
      # Run ingestion script
      # -------------------------------
      - name: Run ingestion script
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DOG }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DOG }}
          AWS_BUCKET_DOG: ${{ secrets.AWS_BUCKET_DOG }}
          AWS_REGION: "us-east-1"
        run: python src/ingest_dog.py